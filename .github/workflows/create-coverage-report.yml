name: ðŸ“ƒ Create Coverage Report

on: [push]

env:
  BUILD_TYPE: Debug
  CCACHE_BASEDIR: ${{ github.workspace }}
  CCACHE_DIR: "${{ github.workspace }}/.ccache"
  CCACHE_COMPILERTYPE: gcc

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install xorg-dev libglu1-mesa-dev gcc-11 g++-11 ccache lcov

    - name: Get timestamp
      shell: bash
      id: ccache_vars
      run: |
        echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
        
    - uses: actions/cache@v4
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ccache-${{ env.CCACHE_COMPILERTYPE }}-${{ env.BUILD_TYPE }}-${{ github.ref }}-${{ steps.ccache_vars.outputs.timestamp }}
        restore-keys: |
          ccache-${{ env.CCACHE_COMPILERTYPE }}-${{ env.BUILD_TYPE }}-${{ github.ref }}-
          ccache-${{ env.CCACHE_COMPILERTYPE }}-${{ env.BUILD_TYPE }}-
          ccache-${{ env.CCACHE_COMPILERTYPE }}-
          ccache-

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_COVERAGE=ON -DBUILD_CORE_TESTS=ON -DBUILD_ENGINE_TESTS=ON -DUSE_CLANG_TIDY=OFF
      shell: bash
      env:
        CC:   gcc-11
        CXX:  g++-11

    - name: CCache Prolog
      run: |-
        ccache -s # Print current cache stats
        ccache -z # Zero cache entry

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target coverage

    - name: CCache Epilog
      run: |
        ccache -s # Print current cache stats

    - name: Upload
      uses: codecov/codecov-action@v4
      with:
        directory: ${{github.workspace}}/build/
        fail_ci_if_error: true
        files: ./coverage-core.info,./coverage-engine.info
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
