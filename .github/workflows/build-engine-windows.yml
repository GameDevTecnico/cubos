name: ðŸªŸ Build Engine Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  CCACHE_BASEDIR: ${{ github.workspace }}
  CCACHE_DIR: "${{ github.workspace }}/.ccache"
  CCACHE_COMPILERCHECK: content

jobs:
  build:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Create Build Env
        run: cmake -E make_directory ${{github.workspace}}\build

      - name: Download ccache
        shell: cmake -P {0}
        run: |
          set(ccache_url "https://github.com/cristianadam/ccache/releases/download/v${{ env.ccache_version }}/${{ runner.os }}.tar.xz")
          file(DOWNLOAD "${ccache_url}" ./ccache.tar.xz SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ccache.tar.xz)
          if(ret AND NOT ret EQUAL 0)
            message( FATAL_ERROR "Bad exit status")
          endif()

      - name: Generate ccache_vars for ccache based on machine
        shell: bash
        id: ccache_vars
        run: |-
          echo "::set-output name=hash::$(echo ${{ env.CCACHE_COMPILERCHECK }})"
          echo "::set-output name=timestamp::$(date '+%Y-%m-%dT%H.%M.%S')"

      - name: Cache-op for build-cache through ccache
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}-${{ github.ref }}-${{ steps.ccache_vars.outputs.timestamp }}
          restore-keys: |-
            ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}-${{ github.ref }}
            ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}
            ccache-${{ matrix.identifier }} 

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}\build -G "Visual Studio 17 2022" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_CORE_SAMPLES=ON -DBUILD_CORE_TESTS=ON -DBUILD_ENGINE_SAMPLES=ON -DUSE_CLANG_TIDY=OFF

      - name: ccache prolog
        run: |-
          ccache -s # Print current cache stats
          ccache -z # Zero cache entry

      - name: Build
        run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}}

      - name: ccache epilog
        run: |
          ccache -s # Print current cache stats

      - name: Test
        run: ${{github.workspace}}\build\core\tests\Release\cubos-core-tests.exe
      
